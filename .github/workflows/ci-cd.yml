name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test -- --watchAll=false

  docker-build-push:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker images
        run: docker-compose build --no-cache

      - name: Tag Docker images
        run: |
          docker tag jobapplication_backend ${{ secrets.DOCKERHUB_USERNAME }}/jobapplication_backend:latest
          docker tag jobapplication_frontend ${{ secrets.DOCKERHUB_USERNAME }}/jobapplication_frontend:latest

      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/jobapplication_backend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/jobapplication_frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-push
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to server
        run: |
          ssh ${{ secrets.SERVER_SSH }} 'cd /path/to/app && docker-compose pull && docker-compose up -d'
