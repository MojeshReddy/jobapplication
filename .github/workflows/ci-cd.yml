name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    env:
      BACKEND_IMAGE: mojeshreddy/jobapp-backend:latest
      FRONTEND_IMAGE: mojeshreddy/jobapp-frontend:latest

    steps:
      # 1️⃣ Checkout code
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # 3️⃣ Backend Build & Test
      - name: Backend - Install & Test
        working-directory: ./backend
        run: |
          npm install
          npm test || echo "No tests found"

      # 4️⃣ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 5️⃣ Build and Push Backend Docker image
      - name: Build and Push Backend Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          tags: ${{ env.BACKEND_IMAGE }}

      # 6️⃣ Build and Push Frontend Docker image
      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./public/Dockerfile
          push: true
          tags: ${{ env.FRONTEND_IMAGE }}
          name: CI/CD Pipeline

      # 7️⃣ Deploy Backend & Frontend to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Backend Deployment
            sudo docker pull mojeshreddy/jobapp-backend:latest
            sudo docker stop jobapp-backend || true
            sudo docker rm jobapp-backend || true
            sudo docker run -d \
              --name jobapp-backend \
              --restart unless-stopped \
              -p 5000:5000 \
              -e PORT=5000 \
              -e MONGO_URI="your-mongodb-atlas-uri" \
              mojeshreddy/jobapp-backend:latest
            # Frontend Deployment
            sudo docker pull mojeshreddy/jobapp-frontend:latest
            sudo docker stop jobapp-frontend || true
            sudo docker rm jobapp-frontend || true
            sudo docker run -d \
              --name jobapp-frontend \
              --restart unless-stopped \
              -p 80:80 \
              mojeshreddy/jobapp-frontend:latest
